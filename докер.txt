Создать папку проекта и перейти в нее
mkdir app && cd app

Создать четыре папки:
mkdir nginx src dockerfiles env

Внутри dockerfiles создать 3 файла:
touch composer.Dockerfile php.Dockerfiles npm.Dockerfile

Заполнить файлы содержимым:

//composer.Dockerfile
FROM composer:latest

WORKDIR /var/www/laravel

ENTRYPOINT ["composer", "--ignore-platform-reqs"]

//php.Dockerfile
FROM php:8.2-fpm-alpine

WORKDIR /var/www/laravel

RUN docker-php-ext-install pdo pdo_mysql

//npm.Dockerfile
FROM node

WORKDIR /var/www/laravel

EXPOSE 5173

ENTRYPOINT ["npm"]

Внутри env создать файл mysql.env
touch mysql.env

Заполнить mysql.env данными:
MYSQL_DATABASE=laravel_db
MYSQL_USER=laravel
MYSQL_PASSWORD=password
MYSQL_ROOT_PASSWORD=password

Внутри nginx создать файл nginx.conf и заполнить его данными:
server {
    listen 80;
    index index.php index.html;
    server_name localhost;
    root /var/www/laravel/public;
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}

Внутри папки проекта создать docker-compose.yml и заполнить его данными:
version: "3.8"

services:
  nginx:
    image: "nginx:stable-alpine"
    ports:
      - "8000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src:/var/www/laravel
    depends_on:
      - mysql
      - php
  php:
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
  mysql:
    image: mysql:8.0
    ports:
      - "3316:3306"
    env_file:
      - env/mysql.env
    volumes:
      - db_data:/var/lib/mysql

  composer:
    build:
      context: dockerfiles
      dockerfile: composer.Dockerfile
    volumes:
      - ./src:/var/www/laravel
  artisan:
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    entrypoint: ["php", "/var/www/laravel/artisan"]
  npm:
    build:
      context: dockerfiles
      dockerfile: npm.Dockerfile
    tty: true
    ports:
      - "5173:5173"
    volumes:
      - ./src:/var/www/laravel
volumes:
  db_data:

Запустить sudo docker compose up -d

Запустить sudo docker compose run composer composer create-project laravel/laravel:^10.0 .

Открыть консоль, перейти в папку app/src и клонировать репозиторий

Открыть .env и изменить некоторые переменные:
APP_URL=http://localhost:8000
DB_HOST=mysql
DB_DATABASE, DB_USERNAME, DB_PASSWORD вставить такие же значения, как в env/mysql.env

Запустить
sudo docker compose run composer run install
sudo docker compose run artisan key:generate
sudo docker compose run artisan migrate
sudo docker compose run npm install
sudo docker compose run npm install vue vue-loader
sudo docker compose run npm install --save-dev @vitejs/plugin-vue

Изменить конфигурацию vite.config.js:
import { defineConfig } from 'vite';
import laravel from 'laravel-vite-plugin';
import vue from '@vitejs/plugin-vue';

export default defineConfig({
    plugins: [
        laravel({
            input: [
                'resources/css/app.css',
                'resources/js/app.js',
            ],
            refresh: true,
        }),
        vue({
            template: {
                transformAssetUrls: {
                    base: null,
                    includeAbsolute: false,
                },
            },
        }),
    ],
    resolve: {
        alias: {
            vue: 'vue/dist/vue.esm-bundler.js',
        },
    },
});

sudo docker compose run npm run build

Если vue файл содержит любые ссылки, то они должны начинаться с http://localhost:8000, иначе CORS Failed.
